import org.apache.spark.rdd._
:load GitLogParser.scala
:load Utils.scala
:load PluginHandler.scala
val sqlContext = new org.apache.spark.sql.SQLContext(sc)
val server = getServer(sc)
val actualHandler = addPluginHandler(server)
changeHandler(new PluginHandler(sqlContext), actualHandler, server)
import sqlContext.createSchemaRDD
def runQuery(sql:String) = {sqlContext.sql(sql).collect.foreach(println)}

import java.nio.file.{Paths, Files}
def registerCommitsAsTable(filePath:String, tableName:String) = {
    if (Files.exists(Paths.get(filePath))) {
        val commitRDD = commitLogToRdd(filePath)
        commitRDD.registerAsTable(tableName)
        commitRDD.cache
    }
}

registerCommitsAsTable("./data/detailed.spark.git.log", "commits")
